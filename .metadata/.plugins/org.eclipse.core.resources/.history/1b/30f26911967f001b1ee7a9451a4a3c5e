package com.daniel.b2w.resouce.test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.daniel.b2w.domain.Planet;
import com.daniel.b2w.dto.PlanetDTO;
import com.daniel.b2w.resource.PlanetResource;
import com.daniel.b2w.service.PlanetService;

import io.restassured.http.ContentType;

import static io.restassured.module.mockmvc.RestAssuredMockMvc.given;
import static io.restassured.module.mockmvc.RestAssuredMockMvc.standaloneSetup;
import static org.mockito.Mockito.never;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.stubbing.OngoingStubbing;

@WebMvcTest
public class PlanetResourceTest {

	@Autowired
	private PlanetResource planetResource;

	@MockBean
	private PlanetService planetService;

	

	@BeforeEach
	public void setup() {
		standaloneSetup(this.planetResource);
	}

	@Test
	public void retornaSucesso_BuscaPorID() {

		when(this.planetService.findById("6043f0ab736fe9619440cda5"))
				.thenReturn(value)(new Planet("6043f0ab736fe9619440cda5", "Alderaan", "temperate", "grasslands, mountains"));

		given().accept(ContentType.JSON).when().get("/planets/").then().statusCode(HttpStatus.OK.value());

	}

	@Test
	public void retornaSucesso_BuscaPorNome() {

		String text = "Yavin%20IV";
		when(this.planetService.findByTitle(text)).thenReturn(value)(
				findListPlanet("6043f0ab736fe9619440cda5", "Alderaan", "temperate", "grasslands, mountains"));
		given().accept(ContentType.JSON).when().get("/planets/").then().statusCode(HttpStatus.OK.value());

	}
	
	@Test
	public void retornaSucesso_BuscaPorTotal() {
		
		when(this.planetService.findAll()).thenReturn(value)(
				findListPlanet("6043f0ab736fe9619440cda5", "Alderaan", "temperate", "grasslands, mountains"));
		given().accept(ContentType.JSON).when().get("/planets/").then().statusCode(HttpStatus.OK.value());

	}
	
	


	private List<Planet> findListPlanet(String id, String name, String climate, String terrain) {
		List<Planet> list = new ArrayList<>();
		Planet planet = new Planet();
		planet.setId(id);
		planet.setName(name);
		planet.setClimate(climate);
		planet.setTerrain(terrain);
		list.add(planet);
		return list;
	}

}
